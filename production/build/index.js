import{createServer as se}from"http";import ie from"morgan";import P from"express";import ce from"cors";import{Server as le}from"socket.io";import"dotenv/config";import{Schema as z,model as K}from"mongoose";var J=new z({username:String,instances:String,subscription:{type:String,default:()=>new Date().toLocaleString("es-CO",{timeZone:"America/Bogota"})},screen:{type:Number,default:0},limitScreen:Number}),g=K("User",J);import O from"chalk";import H from"mongoose";import Z from"ora";var M=async()=>{try{let e=Z(` ${O.blue("Conectando base de datos local.....")}`).start();e.spinner="arc",e.color="blue",await H.connect("mongodb+srv://MiguelFullstack:hookom119@hook.lb2oqov.mongodb.net/movistar"),e.color="green",e.succeed(`${O.greenBright("\xA1Base de datos local conectada con \xE9xito!")}`)}catch(e){throw console.log(e),new Error("Error a la hora de iniciar la base de datos")}};var N=({arr:e,size:t})=>{let a=[],r=e.length/t;for(let n=0;n<e.length;n+=r){let s=e.slice(n,n+r);a.push(s)}return a};var X=e=>!isNaN(new Date(e).getTime()),G=()=>new Date(Date.now()).toISOString().split(".")[0],Q=e=>{let t=G();return Date.parse(t)<=Date.parse(e)},v=e=>{let t=new Date(e);return X(e)?Q(t):"La fecha l\xEDmite no es v\xE1lida."};import E from"moment";import ae from"axios";import oe from"proxy-chain";import"dotenv/config";import"lodash";import{chromium as ne}from"playwright";import{Schema as W,model as ee}from"mongoose";var te=new W({binID:String,bin:[{}]}),S=ee("BinLive",te);var re=async({arrPhones:e,socket:t,username:a,instanceIndex:r,sockOff:n})=>{let s=null,o=!1,c=!1,i=!1,f=!1,u=!0;for(let[$,m]of e.entries())try{if(n?.connected==!1){await o.close();break}do if(u==!0){i!=!1&&await i?.isClosed()&&await o?.close(),f=!1;do try{let{data:l}=await ae(`${process.env.PROXY_API}`);s=l,f&&await new Promise(b=>setTimeout(()=>b(),3e3)),f=!0}catch(l){t.to(a).emit("[claro] exectMsg",{msg:`Tienes un problema con tu proxy: ${l}`})}while(s?.data===null);let y=await oe.anonymizeProxy({url:`http://${s}`,port:3e3});o=await ne.launch({headless:!1,args:[`--proxy-server=${y}`,"--disable-setuid-sandbox","--disable-dev-shm-usage","--disable-accelerated-2d-canvas","--disable-gpu","--no-sandbox"]}),c=await o.newContext(),i=await c.newPage(),i.setDefaultNavigationTimeout(0),i.setDefaultTimeout(0),i.on("crash",async l=>{await l.close()}),i.on("close",async l=>{await l.close()}),await i.route("**/**/**/**/**/**",async(l,b)=>{let p=l.request().resourceType(),h=b.resourceType();if(h=="image"||h=="stylesheet"||h=="font"||h=="media"||h=="other")return await l.abort();if(p=="image"||p=="stylesheet"||p=="font"||p=="media"||p=="other")return await l.abort();await l.continue()}),await i.goto("https://movistar.recaudo.epayco.co/",{timeout:0,waitUntil:"domcontentloaded"}),t.to(a).emit("[claro] exectMsg",{msg:`Instancia ${r} ejecutandose....`}),await i.waitForTimeout(4e3),u=!1}while(u==!0);let x=new Date,{factura:w,status:Y}=await i.evaluate(async y=>{do window?.grecaptcha?.hasOwnProperty("execute")==!1&&await new Promise(j=>setTimeout(j,1e3));while(window?.grecaptcha?.hasOwnProperty("execute")==!1);let p=(await(await fetch("https://secure.payco.co/recaudo/api/recaudo/get/token",{method:"POST",body:JSON.stringify({dominio:"https://movistar.epayco.me"}),headers:{"Content-Type":"application/json; charset=utf-8"}})).json())?.data?.token;if(!p)throw new Error("No se pudo obtener el token de autorizaci\xF3n.");let h=await window.grecaptcha.execute("6LfArI4UAAAAAOvDvRVUtnowA9MVZ__b2lqAVhSo"),F="https://secure.payco.co/recaudo/api/recaudo/proyecto/api/consulta/facturas",R={accept:"application/json","accept-language":"es-ES,es;q=0.9",authorization:`Bearer ${p}`,"content-type":"application/json","x-api-key":h,gxqogix:"KIVfwEN37te0dA6GScZcFvbkoK7op2"},B=JSON.stringify({consulta:[{parametro:"paymentRef",value:y},{parametro:"invoiceType",value:"movil"},{parametro:"isRefNumber",value:"true"},{parametro:"comerce",value:"movistar"},{parametro:"referen",value:""},{parametro:"novum",value:""}],tipoConsulta:"online",dominio:"https://movistar.epayco.me/recaudo/recaudoenlinea"}),T=await fetch(F,{method:"POST",headers:R,body:B}),D=await T.json();return D.success==!0?{factura:D.data.facturas.map(({id:U,total:q,extra14:L,facturaId:_})=>({id:U,total:q,extra14:L,facturaId:_})),status:T.status}:{factura:null,status:T.status}},m);if(Y!=200)throw await o.close(),t.to(a).emit("[claro] exectMsg",{msg:`Claro te ha baneado tu instancia ${$} se reiniciara`}),"error status";let A=new Date().getTime()-x.getTime()+"ms";if(await c.clearCookies(),w){t.to(a).emit("[claro] live",{phone:m,factura:w,msg:`N\xFAmero ${m} tiene una factura con deuda de ${w[0].total} - ${A}`}),await S.findOneAndUpdate({binID:m.slice(0,5)},{$push:{bin:{phone:m,factura:w}}}).then(async y=>{y==null&&await S.create({binID:m.slice(0,5),bin:[{phone:m,factura:w}]})});continue}t.to(a).emit("[claro] dead",{phone:m,msg:`N\xFAmero ${m} no tiene factura - ${A}`})}catch(x){if(console.log(x),await i?.isClosed()==!1&&await o?.close(),t.to(a).emit("[claro] exectMsg",{msg:`Ha ocurrido un error con la instancia ${r} esta sera reiniciada....`}),e.splice($+1,0,m),u=!0,n?.connected==!1){await o.close();break}continue}t.to(a).emit("[claro] exectMsg",{msg:`La instancia ${r} ha finalizado`}),await o.close()},k=async({phones:e,instances:t,socket:a,username:r,sockOff:n})=>{let s=N({arr:e.flat(),size:t});return await[...Array(Number(t))].map(async(o,c)=>{re({arrPhones:s[c].flat(),socket:a,username:r,sockOff:n,instanceIndex:++c})})};var d=P();d.use(ce({origin:"*"}));d.use(P.json({limit:"1000mb"}));d.use(ie("common"));var C=3001,V=se(d),I=new le(V,{cors:"*",maxHttpBufferSize:1e10});await M();d.post("/user/createUser",async(e,t)=>{let{token:a,instances:r,subscription:n,screen:s,limitScreen:o,createKey:c}=e.body;if(await g.findOne({username:a}))return t.status(404).json({msg:"Este token ya existe"});if(a==null||n==null||r==null||o==null)return t.status(400).json({msg:"Por favor envie toda la informacion completa"});if(c!=process.env.CREATE_KEY)return t.status(404).json({msg:"No tienes suficientes permisos para crear usuarios"});let f=new Date(Date.now()+3600*1e3),u=E(f,"YYYY-MM-DD hh:mm:ss").add({day:n}).toISOString();return await g.create({username:a,instances:r,subscription:u,screen:s,limitScreen:o}),t.status(200).json({msg:`Token ${a} con ${o} pantallas simultanea con ${r} instancias durante ${n} dias`})});d.post("/user/getSubcription",async(e,t)=>{try{let{token:a}=e.body,r=await g.findOne({username:a});if(r==null)return t.status(404).json({msg:"Este token es invalido"});let{instances:n,subscription:s}=r;if(n==0)return t.status(404).json({msg:"No tienes instancias disponibles, por favor contacta al administrador"});let o=s;return v(o)==!1?t.status(400).json({msg:`Ya ha caducado tu subcripcion de ${o.split("T")[0].replaceAll("-"," ")} con hora ${o.split("T")[1]}, por favor contacta al administrador`}):t.status(200).json({msg:`Tienes ${n} pantallas simultaneas hasta el dia ${o.split("T")[0].replaceAll("-"," ")} con hora ${o.split("T")[1]}`})}catch(a){return console.log(a),t.status(500).json({msg:"error en el servidor"})}});d.post("/user/updateSubcription",async(e,t)=>{try{let{token:a,subscriptionDaysMore:r}=e.body,n=await g.findOne({username:a});if(n==null)return t.status(404).json({msg:"Este token es invalido"});let{subscription:s,instances:o,username:c}=n,f=v(s),u=E(new Date(Date.now()+3600*1e3),"YYYY-MM-DD hh:mm:ss").add({day:r}).toISOString();return await g.findOneAndUpdate({username:c},{$set:{subscription:u}},{new:!0}).select({userRef:0,__v:0}),t.status(200).json({msg:`Tienes ${o} pantallas simultaneas hasta el dia ${u.split("T")[0].replaceAll("-"," ")} con hora ${u.split("T")[1]}`})}catch(a){return console.log(a),t.status(500).json({msg:"error en el servidor"})}});d.get("*",async(e,t)=>t.json({ok:!0}));I.on("connection",async e=>{try{let t=e.handshake?.query["X-TOKEN-KEY"],a=await g.findOne({username:t.trim()});if(a==null)return e.emit("[claro] exectMsg",{msg:"\xA1Vaya! Parece tienes un usuario invalido, por favor contacta con el administrador.",error:!0}),e.disconnect(!0);let{username:r,screen:n,limitScreen:s,instances:o,subscription:c}=a;if(n>=s)return e.emit("[claro] exectMsg",{msg:"Has superado el limite de pantallas, si deseas agregar m\xE1s por favor contacta con el administrador",error:!0}),e.disconnect(!0);if(v(c)==!1)return e.emit("[claro] exectMsg",{msg:"Tu subscripcion ha expirado"});await e.join(r),e.on("[claro] initCheckerAuth",async({phones:u})=>{await k({phones:u,instances:o,socket:I,username:r,sockOff:e})}),e.on("disconnect",()=>e.removeAllListeners())}catch(t){console.log(t)}});V.listen(C??0,()=>console.log(`conectado al servidor ${C}`));export{I as io};
